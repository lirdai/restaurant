{"version":3,"sources":["components/footer.js","components/pagination.js","components/home.js","components/manager.js","components/courtier.js","components/notification.js","components/reservation.js","components/reservation2.js","decorator/pictures/food.jpg","decorator/pictures/coffee.jpg","decorator/pictures/dessert.jpg","components/displayMenu.js","components/deliver.js","components/deliver2.js","components/login.js","components/register.js","components/checkout.js","components/delivering.js","components/delivermanager.js","components/reservationmanager.js","components/menumanager.js","reducer/book.js","reducer/order.js","reducer/deliverid.js","index.js"],"names":["Footer","className","title","frameBorder","src","process","allowFullScreen","Pagination","postsPerPage","totalPosts","Paginate","pageNumbers","i","Math","ceil","push","aria-label","map","number","onClick","FIND_SAME_KIN_FOOD","gql","FIND_ALL_REVIEWS","ADD_REVIEW","REVIEW_ADDED","Example","props","Modal","show","onHide","handleClose","onSubmit","event","preventDefault","user","userID","target","value","comment","addReview","variables","Header","closeButton","Title","Body","type","name","placeholder","rows","cols","Button","variant","Home","useState","setShow","menu","setMenu","reviews","setReviews","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","reviews_result","useQuery","useLazyQuery","getMenu","result","useMutation","useSubscription","onSubscriptionData","subscriptionData","loading","concat","data","reviewAdded","client","useApolloClient","handleFoodCategory","category_input","categoryToSearch","useEffect","findSameKindFood","findAllReviews","id","username","to","setToken","setRole","setUserID","setUsername","localStorage","clear","resetStore","scope","food","description","price","token","review","Date","parseInt","date","toLocaleString","length","pageNumber","Manager","ALL_DELIVERS","UPDATE_DELIVER_ACCEPTED","UPDATE_DELIVER_DELIVERED","ORDERED","Courtier","orders","setOrders","style_false","color","style_true","delivers","updateDeliverAccepted","updateDeliverDelivered","ordered","allDelivers","handleAccepted","courtier","getItem","accepted","handleDelivered","delivered","filter","deliver","purchase_date","info","phone","street","street2","city","postal_code","style","Notification","errorMessage","successMessage","role","ADD_RESERVATION","Reservation","dispatch","useDispatch","addReservation","handleSubmit","a","reservedAt","time","customers","setError","message","emailjs","sendForm","then","setSuccess","error","text","setReserve","email","required","min","max","ReservationSecond","reservation","useSelector","state","books","service_id","template_id","user_id","template_params","axios","post","JSON","stringify","quantity","setQuantity","toFixed","onChange","DisplayPartFood","category","picture","item","parseFloat","reduce","handleShow","food_id","s","width","height","alt","DisplayMenu","picture_array","coffeePic","foodPic","dessertPic","index","toUpperCase","All_FOOD","Deliver","history","useHistory","total","order","href","allFood","itemID","CREATE_DELIVER","STRIPE_CHARGE","DeliverSecond","createDeliver","result_deliver","stripeCharge","result_stripe","stripe","useStripe","elements","useElements","paymentMethodReq","setPaymentMethodReq","orderlist","orderItem","amount","billingDetails","address","line1","line2","createPaymentMethod","card","getElement","CardElement","billing_details","request","setTimeout","confirmCardPayment","clientSecret","payment_method","paymentMethod","fetchData","options","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","hidePostalCode","LOGIN","Login","login","setEmail","setItem","password","pwd","CREATE_USER","Register","createUser","patterns","ERRORS","regex_validate","attributes","test","passwordHash","setRegister","onKeyUp","Checkout","ACCEPTED","DELIVERED","Delivering","deliverid","deliverID","setDeliverID","setAccepted","setDelivered","DeliverManager","ALL_RESERVATIONS","UPDATE_RESERVATION_CHECK","ReservationManager","updateReservationCheck","changeCheck","check","allReservations","res","ALL_FOOD","ADD_FOOD","UPDATE_FOOD_PRICE","DELETE_FOOD","updateFoodPrice","MenuManager","addFood","deleteFood","handleDeleteFood","bookReducer","action","orderReducer","itemsNotDelete","deliveridReducer","authLink","setContext","_","headers","authorization","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","splitLink","split","query","definition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","link","reducer","combineReducers","store","createStore","stripePromise","loadStripe","App","reserve","register","setErrorMessage","setSuccessMessage","error_notify","success_notify","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.266ce315.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Footer = () => {\r\n  const LOCATOR = \"290 Bremner Blvd, Toronto, ON\"\r\n\r\n  return (\r\n    <div className='footer'>\r\n       {/* Introduction: map/pictures....*/}\r\n       <div className='footer-map'>\r\n        {/* Map */}\r\n        <iframe\r\n          title='googleMap'\r\n          frameBorder=\"0\"\r\n          className='map'\r\n          src={`https://www.google.com/maps/embed/v1/place?key=${process.env.REACT_APP_GOOGLE_API}&q=${LOCATOR}`} allowFullScreen>\r\n        </iframe>\r\n      </div>\r\n      \r\n      <div className='footer-intro'>\r\n        <h3 className='pb-3'>Office Hours</h3>\r\n        <p>Monday - Thursday: 7:00 a.m. ~ 3:00 p.m. </p>\r\n        <p className='pb-5'>Friday - Sunday: 9:00 a.m. ~ 5:00 p.m. </p>\r\n        <p>\t&copy; Created by Daisy Dai</p>\r\n        <p>Created on 11/18/2020</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n  \r\n\r\n\r\nexport default Footer","import React from 'react'\r\n\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, Paginate }) => {\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts/postsPerPage); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\" className='pagination-nav'>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <button onClick={() => Paginate(number)} className='page-link'>{number}</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Pagination","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { gql, useLazyQuery, useQuery, useMutation, useSubscription } from '@apollo/client'\r\nimport { useApolloClient } from '@apollo/client'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport Pagination from './pagination'\r\n\r\n\r\n\r\nconst FIND_SAME_KIN_FOOD = gql`\r\n  query findSameKindFood($categoryToSearch: String!) {\r\n    findSameKindFood(category: $categoryToSearch) {\r\n      name\r\n      description\r\n      price\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst FIND_ALL_REVIEWS = gql`\r\n  query {\r\n    findAllReviews{\r\n      id\r\n      title\r\n      comment\r\n      date\r\n      user {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst ADD_REVIEW = gql`\r\nmutation addReview($user: ID!, $title: String!, $comment: String!) {\r\n  addReview(\r\n    user: $user,\r\n    title: $title,\r\n    comment: $comment\r\n  ) {\r\n    title\r\n    comment\r\n  }\r\n}\r\n`\r\n\r\nconst REVIEW_ADDED = gql`\r\n  subscription {\r\n    reviewAdded {\r\n      user {\r\n        username\r\n      }\r\n      title\r\n      comment\r\n      date\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nfunction Example(props) {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const user = props.userID\r\n    const title = event.target.title.value\r\n    const comment = event.target.comment.value\r\n\r\n    props.addReview({ variables: { user, title, comment } })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Comment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <input type='text' name='title' placeholder='Title' />\r\n            <br /><br />\r\n            <textarea rows='5' cols='60' name='comment' placeholder='Any Comment Here...'></textarea>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={props.handleClose} type='button'>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={props.handleClose} type='submit'>\r\n              Save Comment\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n  // UseState\r\n  const [ show, setShow ] = useState(false)\r\n  const [ menu, setMenu ] = useState(null)\r\n  const [ reviews, setReviews ] = useState([])\r\n  const [ currentPage, setCurrentPage ] = useState(1)\r\n  const [ postsPerPage ] = useState(2)\r\n\r\n  // Pagination\r\n  const indexOfLastPost = currentPage * postsPerPage\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage\r\n  const currentPosts = reviews.slice(indexOfFirstPost, indexOfLastPost)\r\n  const Paginate = (pageNumber) => setCurrentPage(pageNumber)\r\n\r\n  // GraphQL\r\n  const reviews_result = useQuery(FIND_ALL_REVIEWS)\r\n  const [ getMenu, result ] = useLazyQuery(FIND_SAME_KIN_FOOD)\r\n  const [ addReview ] = useMutation(ADD_REVIEW)\r\n\r\n  useSubscription(REVIEW_ADDED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      if (reviews_result.loading === false) {\r\n        setReviews(reviews.concat(subscriptionData.data.reviewAdded))\r\n      }\r\n    }\r\n  })\r\n\r\n  const client = useApolloClient()\r\n  \r\n  // Helper Function\r\n  const handleFoodCategory = (category_input) => {\r\n    getMenu({ variables: { categoryToSearch: category_input }})\r\n  }\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  const logout = () => {\r\n    props.setToken(null)\r\n    props.setRole(null)\r\n    props.setUserID(null)\r\n    props.setUsername(null)\r\n    localStorage.clear()\r\n    client.resetStore()\r\n  }\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    if (result.data) {\r\n      // console.log(result.data)\r\n      setMenu(result.data.findSameKindFood)\r\n    }\r\n  }, [result])\r\n\r\n  useEffect(() => {\r\n    if (reviews_result.loading === false && reviews_result.data) {\r\n      // console.log(reviews_result)\r\n      setReviews(reviews_result.data.findAllReviews)\r\n    } \r\n  }, [reviews_result.data, reviews_result.loading])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Front Page */}\r\n      {/* Image Background */}\r\n      <div className=\"bg1\">\r\n        {/* Caption */}\r\n        <div id='caption'>Cappuccino</div>\r\n        {props.username\r\n          ? <div id='caption-logout'>\r\n              Hello, {props.username}!\r\n              <Link to=\"/logout\" onClick={logout}>Log Out</Link>\r\n            </div>\r\n          : <Link id='caption-login' to=\"/login\">Log In</Link>\r\n        }\r\n        \r\n       \r\n        {/* Link */}\r\n        <div id=\"home-grid-container\">\r\n          <Link id='reservation' className=\"btn btn-danger\" to=\"/reservation\">Reservation</Link>\r\n          <Link id='deliver' className=\"btn btn-danger\" to=\"/deliver\">Delivery</Link>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* Menu */}\r\n      <div className='menu-bar'>\r\n        <p id='menu-caption'>Our Menu</p>\r\n        <div className='menu mb-5'>\r\n          <button className='btn btn-info' onClick={() => handleFoodCategory('coffee')}>Coffee</button>\r\n          <button className='btn btn-info' onClick={() => handleFoodCategory('food')}>Main Food</button>\r\n          <button className='btn btn-info' onClick={() => handleFoodCategory('dessert')}>Dessert</button>\r\n        </div>\r\n        { menu === null \r\n          ? <p className='mt-5 text-center text-dark font-weight-bolder'>Welcome to Cappuccino! Please press button to see Menu</p>\r\n          : <table className=\"table table-striped table-light mt-5\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\"></th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {menu.map(\r\n                  food => <tr key={food.id}>\r\n                    <th scope=\"row\">\r\n                      {food.name}\r\n                      <br /><br />\r\n                      <small>{food.description}</small>\r\n                    </th>\r\n                    <td>${food.price}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          }\r\n      </div>\r\n      \r\n\r\n      {/* Comments on Restaurant */}\r\n      <div className='review'>\r\n        <h3>Reviews</h3> \r\n        {props.token !== null\r\n          ? <button onClick={handleShow}><i className=\"fas fa-edit fa-2x\"></i></button>\r\n          : <p>Please Log in to write a review !</p>\r\n        }\r\n        \r\n        <div id='reviews'>\r\n          {reviews_result.loading\r\n            ? <p>Loading...</p>\r\n            : <div className='mt-5'>\r\n                {currentPosts.map(\r\n                  review => \r\n                  <div key={review.id}>\r\n                    <h5>{review.title}</h5> \r\n                    <p>Created by {review.user.username}</p>\r\n                    <p className='pl-3'>{review.comment}</p>\r\n                    <p id='line'>{new Date(parseInt(review.date)).toLocaleString()}</p>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <Example \r\n          show = {show} \r\n          handleClose = {handleClose} \r\n          addReview = {addReview}\r\n          userID = {props.userID}\r\n        />\r\n\r\n        <Pagination \r\n          postsPerPage = {postsPerPage}\r\n          totalPosts = {reviews.length}\r\n          Paginate = {Paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Home","import React from 'react'\r\nimport { useApolloClient } from '@apollo/client'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst Manager = (props) => {\r\n    const client = useApolloClient()\r\n\r\n    const logout = () => {\r\n        props.setToken(null)\r\n        props.setRole(null)\r\n        props.setUserID(null)\r\n        props.setUsername(null)\r\n        localStorage.clear()\r\n        client.resetStore()\r\n    }\r\n\r\n    return (\r\n        <div className='manager-nav-bigger'>\r\n        <div className='manager-nav'>\r\n            <Link className='btn btn-primary' to=\"/logout\" onClick={logout}>Log Out</Link>\r\n            {/* Control Menu */}\r\n            <Link className='btn btn-primary' to=\"/manager/menu\"> Menu </Link>\r\n            {/* Check Reservation */}\r\n            <Link className='btn btn-primary' to=\"/manager/reservation\"> Reservation </Link>\r\n            {/* Check Deliver */}\r\n            <Link className='btn btn-primary' to=\"/manager/deliver\"> Deliver </Link>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Manager","import React, { useState, useEffect } from 'react'\r\nimport { useApolloClient } from '@apollo/client'\r\nimport { Link } from \"react-router-dom\"\r\nimport { gql, useQuery, useMutation, useSubscription } from '@apollo/client'\r\n\r\n\r\n\r\nconst ALL_DELIVERS = gql`\r\nquery {\r\n    allDelivers {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n}\r\n`\r\nconst UPDATE_DELIVER_ACCEPTED = gql`\r\nmutation updateDeliverAccepted($id: ID!, $courtier: ID!, $accepted: Boolean!) {\r\n    updateDeliverAccepted(\r\n        id: $id,\r\n        courtier: $courtier,\r\n        accepted: $accepted\r\n    ) {\r\n        id\r\n    }\r\n}\r\n`\r\nconst UPDATE_DELIVER_DELIVERED = gql`\r\nmutation updateDeliverDelivered($id: ID!, $delivered: Boolean!) {\r\n    updateDeliverDelivered(\r\n        id: $id,\r\n        delivered: $delivered\r\n    ) {\r\n        id\r\n    }\r\n}\r\n`\r\nconst ORDERED = gql`\r\n  subscription {\r\n    ordered {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst Courtier = (props) => {\r\n    const [ orders, setOrders ] = useState([])\r\n\r\n    const style_false = {\r\n        color: 'red'\r\n    }\r\n\r\n    const style_true = {\r\n        color: 'green'\r\n    }\r\n\r\n    const client = useApolloClient()\r\n    const delivers = useQuery(ALL_DELIVERS)\r\n    const [ updateDeliverAccepted ] = useMutation(UPDATE_DELIVER_ACCEPTED)\r\n    const [ updateDeliverDelivered ] = useMutation(UPDATE_DELIVER_DELIVERED)\r\n\r\n    useSubscription(ORDERED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            setOrders(orders.concat(subscriptionData.data.ordered))\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (delivers.data) {\r\n            setOrders(delivers.data.allDelivers)\r\n        }\r\n    }, [delivers.data])\r\n\r\n    const logout = () => {\r\n        props.setToken(null)\r\n        props.setRole(null)\r\n        props.setUserID(null)\r\n        props.setUsername(null)\r\n        localStorage.clear()\r\n        client.resetStore()\r\n    }\r\n\r\n    const handleAccepted = (event) => {\r\n        const id = event.target.id.value\r\n        const accepted = true\r\n        const courtier = localStorage.getItem('userID')\r\n\r\n        updateDeliverAccepted({ variables: { id, accepted, courtier } })\r\n    }\r\n\r\n    const handleDelivered = (event) => {\r\n        const id = event.target.id.value\r\n        const delivered = true\r\n\r\n        updateDeliverDelivered({ variables: { id, delivered } })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n              <Link to=\"/logout\" onClick={logout}>Log Out</Link>\r\n            </div>\r\n\r\n            {/* Display delivers */}\r\n            <div>\r\n                {delivers.loading\r\n                    ? <div>loading...</div>\r\n                    : <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Purchase Date</th>\r\n                                <th scope=\"col\">Price</th>\r\n                                <th scope=\"col\">User</th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Street</th>\r\n                                <th scope=\"col\">Apt#</th>\r\n                                <th scope=\"col\">City</th>\r\n                                <th scope=\"col\">Postal Code</th>\r\n                                <th scope=\"col\">Accepted</th>\r\n                                <th scope=\"col\">Delivered</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.filter(deliver => deliver.ordered === true).map(deliver => \r\n                                <tr key={deliver.id}>\r\n                                    <th scope=\"row\">{deliver.id}</th>\r\n                                    <td>{new Date(parseInt(deliver.purchase_date)).toLocaleString()}</td>\r\n                                    <td>{deliver.price}</td>\r\n                                    <td>{deliver.user ? deliver.user.username : \"None\"}</td>\r\n                                    <td>{deliver.info ? deliver.info.phone : \"None\"}</td>\r\n                                    <td>{deliver.info ? deliver.info.street : \"None\"}</td>\r\n                                    <td>{deliver.info ? deliver.info.street2 : \"None\"}</td>\r\n                                    <td>{deliver.info ? deliver.info.city : \"None\"}</td>\r\n                                    <td>{deliver.info ? deliver.info.postal_code : \"None\"}</td>\r\n                                    <td>\r\n                                        <form onSubmit={handleAccepted}>\r\n                                            <input type='hidden' name='id' value={deliver.id} />\r\n                                            <button style={deliver.accepted ? style_true : style_false} className='btn btn-white'>\r\n                                                <i className=\"fas fa-check\"></i>\r\n                                            </button>\r\n                                        </form>\r\n                                    </td>\r\n                                    <td>\r\n                                        <form onSubmit={handleDelivered}>\r\n                                            <input type='hidden' name='id' value={deliver.id} />\r\n                                            <button style={deliver.delivered ? style_true : style_false} className='btn btn-white'>\r\n                                                <i className=\"fas fa-check\"></i>\r\n                                            </button>\r\n                                        </form>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Courtier","import React from 'react'\r\n\r\n\r\n\r\nconst Notification = ({ errorMessage, successMessage }) => {\r\n    return (\r\n        <div>\r\n            {errorMessage\r\n                ? <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {errorMessage}\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            {successMessage\r\n                ? <div className=\"alert alert-success\" role=\"success\">\r\n                    {successMessage}\r\n                </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Notification","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport Notification from './notification'\r\nimport emailjs from 'emailjs-com'\r\n\r\n\r\n\r\nconst ADD_RESERVATION = gql`\r\nmutation addReservation($reservedAt: String!, $time: String!, $customers: Int!, $user: ID) {\r\n  addReservation(\r\n    reservedAt: $reservedAt\r\n    time: $time\r\n    customers: $customers\r\n    user: $user\r\n  ) {\r\n    reservedAt\r\n    time\r\n    customers\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst Reservation = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [ addReservation ] = useMutation(ADD_RESERVATION)\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const reservedAt = event.target.date.value\r\n    const time = event.target.time.value\r\n    const customers = parseInt(event.target.customers.value)\r\n    const user = props.userID\r\n\r\n    if (props.userID !== null) {\r\n\r\n      try {\r\n        await addReservation({ variables: { reservedAt, time, customers, user } })\r\n      } catch (error) {\r\n        props.setError(error.message)\r\n      }\r\n     \r\n      emailjs\r\n        .sendForm('service_d7tzr1g', 'template_od0ql1o', event.target, 'user_uLpm5LanNOvUTRchkjsAS')\r\n        .then((result) => {\r\n            props.setSuccess(\"Book successfully!\")\r\n        }, (error) => {\r\n            props.setError(error.text);\r\n        })\r\n    } else {\r\n      dispatch({\r\n        type: 'BOOK_TIME',\r\n        data: {\r\n          reservedAt,\r\n          time,\r\n          customers\r\n        }\r\n      })\r\n  \r\n      props.setReserve(true)\r\n    }\r\n\r\n    event.target.date.value = ''\r\n    event.target.time.value = ''\r\n    event.target.customers.value = null\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='reservation'>\r\n      {/* Image Background */}\r\n      <div className=\"bg2\">\r\n        <div className=\"reservation-bigger-form\">\r\n          <div id=\"reserve-bg\">\r\n            <Notification errorMessage={props.errorMessage} successMessage={props.successMessage} />\r\n            <form className='reservation-form' onSubmit={handleSubmit}>\r\n              <input type=\"hidden\" name='email' value={props.email ?props.email :''} />\r\n              <input type=\"date\" name='date' required />\r\n              <select name='time' required>\r\n                <option value=\"9:00 a.m.\">9:00 a.m.</option>\r\n                <option value=\"10:30 a.m.\">10:30 a.m.</option>\r\n                <option value=\"12:00 p.m.\">12:00 p.m.</option>\r\n                <option value=\"1:30 p.m.\">1:30 p.m.</option>\r\n                <option value=\"3:00 p.m.\">3:00 p.m.</option>\r\n                <option value=\"4:30 p.m.\">4:30 p.m.</option>\r\n                <option value=\"6:00 p.m.\">6:00 p.m.</option>\r\n              </select>\r\n              <input type=\"number\" min=\"1\" max=\"6\" placeholder=\"customer(s)\" name='customers' required />\r\n              <input className='btn btn-danger py-3 px-5' type=\"submit\" value=\"Reserve Now\" />\r\n            </form>\r\n          </div>\r\n\r\n          {/* Link */}\r\n          <div className='reservation-link'>\r\n            <Link className='btn btn-info py-3 px-5' to=\"/\">Go back Home</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Reservation","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { useSelector } from 'react-redux'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport Notification from './notification'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst ADD_RESERVATION = gql`\r\nmutation addReservation($reservedAt: String!, $time: String!, $customers: Int!, $email: String, $phone: String) {\r\n  addReservation(\r\n    reservedAt: $reservedAt\r\n    time: $time\r\n    customers: $customers\r\n    email: $email\r\n    phone: $phone\r\n  ) {\r\n    reservedAt\r\n    time\r\n    customers\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst ReservationSecond = ({ setReserve, setError, setSuccess, errorMessage, successMessage }) => {\r\n  const [ addReservation ] = useMutation(ADD_RESERVATION)\r\n  const reservation = useSelector(state => state.books)\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    const email = event.target.email.value\r\n    const phone = event.target.phone.value\r\n\r\n    event.target.email.value = ''\r\n    event.target.phone.value = ''\r\n\r\n    const reservedAt = reservation.reservedAt\r\n    const time = reservation.time\r\n    const customers = parseInt(reservation.customers)\r\n\r\n    try {\r\n      await addReservation({ variables: { reservedAt, time, customers, email, phone } })\r\n    } catch (error) {\r\n      setError(error.message)\r\n    }\r\n\r\n    var data = {\r\n      service_id: 'service_d7tzr1g',\r\n      template_id: 'template_od0ql1o',\r\n      user_id: 'user_uLpm5LanNOvUTRchkjsAS',\r\n      template_params: {\r\n        date: reservedAt,\r\n        time: time,\r\n        customers: customers,\r\n        email: email\r\n      }\r\n    }\r\n\r\n    axios\r\n      .post('https://api.emailjs.com/api/v1.0/email/send', data)\r\n      .then((result) => {\r\n        setSuccess(\"Book successfully!\")\r\n      }, (error) => {\r\n        setError(JSON.stringify(error.message))\r\n      })\r\n\r\n    setReserve(false)\r\n}\r\n  \r\n\r\n  return (\r\n    <div className='book-bigger'> \r\n      <form onSubmit={handleSubmit} className=\"reservation-book-form\">\r\n        {/* Strangers */}\r\n        <Notification errorMessage={errorMessage} successMessage={successMessage} />\r\n        <input type='text' placeholder=\"E-mail\" name='email' required />\r\n        <input type='text' placeholder=\"Phone\" name='phone' required />\r\n        <input type=\"submit\" value='Book Now' />\r\n\r\n        {/* Users */}\r\n        <small>want to <Link to=\"/login\">login</Link> ?</small>\r\n        <small>Register as a <Link to=\"/register\">user</Link>?</small>\r\n      </form>\r\n\r\n      {/* Link */}\r\n      <div className='reservation-link'>\r\n        <Link className='btn btn-info py-3 px-5' to=\"/\">Go back Home</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ReservationSecond","export default __webpack_public_path__ + \"static/media/food.46d5773f.jpg\";","export default __webpack_public_path__ + \"static/media/coffee.e40e6214.jpg\";","export default __webpack_public_path__ + \"static/media/dessert.b41b956d.jpg\";","import React, { useState } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport foodPic from '../decorator/pictures/food.jpg'\r\nimport coffeePic from '../decorator/pictures/coffee.jpg'\r\nimport dessertPic from '../decorator/pictures/dessert.jpg'\r\n\r\n\r\n\r\nconst Example = ({ show, handleClose, quantity, setQuantity, food, handleSubmit }) => {\r\n    const handlePlusQuantity = () => {\r\n        setQuantity(quantity + 1)\r\n    }\r\n\r\n    const handleMinusQuantity = () => {\r\n        if (quantity > 1 ) {\r\n            setQuantity(quantity - 1)\r\n        } else {\r\n            setQuantity(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{food.name}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <b id='quantity'>Quantity: \r\n                    <input type='hidden' name='item' value={ food.id } />\r\n                    <input type='hidden' name='name' value={ food.name } />\r\n                    <input type='hidden' name='price' value={ (quantity * food.price).toFixed(2) } />\r\n                    <button type='button' onClick={handleMinusQuantity} className='pr-4'><i className=\"fas fa-minus fa-lg\" ></i></button>\r\n                    <input value={quantity} name='quantity' className='text-center' onChange={(quantity) => quantity} /> \r\n                    <button type='button' onClick={handlePlusQuantity} className='pr-4'><i className=\"fas fa-plus fa-lg\"></i> </button>\r\n                    <p>Price: $ { (quantity * food.price).toFixed(2) }</p>\r\n                    </b>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" type='submit' onClick={handleClose}>Close</Button>\r\n                    <input type=\"submit\" value=\"Save Changes\" />\r\n                </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst DisplayPartFood = ({menu, category, picture}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        dispatch({\r\n            type: 'ORDER_FOOD',\r\n            data: {\r\n                item: event.target.item.value,\r\n                name: event.target.name.value,\r\n                quantity: parseInt(event.target.quantity.value),\r\n                price: parseFloat(event.target.price.value).toFixed(2)  \r\n            }\r\n        })\r\n    }    \r\n\r\n    const [ quantity, setQuantity ] = useState(1)\r\n    const [show, setShow] = useState(menu.reduce((result, food) => {\r\n        result[food.id] = false\r\n        return result\r\n    }, {}))\r\n\r\n    const handleClose = (food_id) => {\r\n        return () => {\r\n            setQuantity(1)\r\n            var s = {\r\n                ...show,\r\n            }\r\n            s[food_id] = false\r\n            setShow(s)\r\n        }\r\n    }\r\n\r\n    const handleShow = (food_id) => {\r\n        return () => {\r\n            var s = {\r\n                ...show,\r\n            }\r\n            s[food_id] = true\r\n            setShow(s)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='menu-grid'>\r\n            {menu.filter(food => food.category === category).map(food => \r\n                <div key={food.id}>\r\n                    <div className=\"card mb-3\" id=\"card-height\">\r\n                        <div className=\"row no-gutters\">\r\n                            <div className=\"col-md-4\">\r\n                                {/* \r\n                                    Coffee\r\n                                    Fahmi Fakhrudin\r\n                                    @fahmipaping \r\n                                    https://unsplash.com/photos/nzyzAUsbV0M\r\n\r\n                                    Food\r\n                                    amirali mirhashemian\r\n                                    @amir_v_ali\r\n                                    https://unsplash.com/photos/Ea_IbQfxm-0\r\n\r\n                                    Cake\r\n                                    Toa Heftiba\r\n                                    @heftiba\r\n                                    https://unsplash.com/photos/2eylVMKAr1A\r\n                                */}\r\n                                <img src={picture} width=\"100\" height=\"200\" className=\"card-img\" alt={food.category} onClick={handleShow(food.id)} />\r\n                            </div>\r\n        \r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\" onClick={handleShow(food.id)}>{food.name}</h5>\r\n\r\n                                    <Example \r\n                                        show={show[food.id]} \r\n                                        handleClose={handleClose(food.id)} \r\n                                        quantity={quantity} \r\n                                        setQuantity={setQuantity} \r\n                                        food={food}\r\n                                        handleSubmit={handleSubmit}\r\n                                    />\r\n\r\n                                    <p className=\"card-text\" onClick={handleShow(food.id)}>{food.description}</p>\r\n                                    <p className=\"card-text\"><small className=\"text-muted\">$ {food.price}</small></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst DisplayMenu = ({menu, userID}) => {\r\n    let category_array = ['coffee', 'food', 'dessert']\r\n    let picture_array = [coffeePic, foodPic, dessertPic]\r\n    \r\n    return(\r\n        <div>\r\n            {category_array.map((category, index) => \r\n                <div key={index}>\r\n                    <h3 id={category} className='mt-5'>{category.toUpperCase()}</h3>\r\n                    <DisplayPartFood \r\n                        menu={menu}\r\n                        userID={userID} \r\n                        category={category} \r\n                        picture={picture_array[index]} \r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DisplayMenu","import React from 'react'\r\nimport { gql, useQuery } from '@apollo/client'\r\nimport DisplayMenu from './displayMenu'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nconst All_FOOD = gql`\r\nquery {\r\n  allFood  {\r\n    name\r\n    description\r\n    category\r\n    price\r\n    id\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst Deliver = (props) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const menu = useQuery(All_FOOD)\r\n  const orders = useSelector(state => state.orders)\r\n  const price = orders.reduce((total, order) => {\r\n    return total + parseFloat(order.price)\r\n  }, 0)\r\n\r\n\r\n  const handleClick = () => {\r\n    if (props.userID === null) {\r\n      history.push('/deliver/signup')\r\n    } else {\r\n      history.push('/checkout')\r\n    }\r\n  }\r\n\r\n\r\n  const handleDeleteClick = (itemID) => {\r\n    dispatch({\r\n      type: \"DELETE_FOOD\",\r\n      data: {\r\n        item: itemID\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='deliver p-5'>\r\n      {/* Image Background */}\r\n      <div className='deliver-page'>\r\n        <div>\r\n          <div className=\"bg3\"></div>\r\n          <div className='deliver-bar'>\r\n            <a href=\"#coffee\">Coffee</a>\r\n            <a href=\"#food\">Main Food</a>\r\n            <a href=\"#dessert\">Dessert</a>\r\n          </div>\r\n\r\n          {menu.loading\r\n            ? <p>Loading...</p>\r\n            : <DisplayMenu \r\n                menu={menu.data.allFood} \r\n                userID={props.userID} \r\n              />\r\n          }\r\n        </div>\r\n        <div className='cart'>\r\n          <h5>Shopping Cart</h5>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              {\r\n                orders.map((order, index) => \r\n                <tr key={index}>\r\n                  <td>{order.name}</td>\r\n                  <td>{order.quantity}</td>\r\n                  <td>$ {order.price}</td>\r\n                  <td>\r\n                    <button onClick={() => handleDeleteClick(order.item)} className='btn btn-light'>\r\n                      <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              }          \r\n            </tbody>\r\n          </table>\r\n          <h5>Total Price: ${price.toFixed(2)}</h5>\r\n          <button onClick={handleClick}>Check Out</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Deliver","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\n\r\n\r\nconst CREATE_DELIVER = gql`\r\nmutation createDeliver($orderlist: [OrderEntry]!, $price: Float!, $ordered: Boolean!, $user: ID, $email: String, $phone: String, $street: String, $street2: String, $city: String, $postal_code: String) {\r\n    createDeliver(\r\n        orderlist: $orderlist\r\n        price: $price\r\n        ordered: $ordered\r\n        user: $user\r\n        email: $email\r\n        phone: $phone\r\n        street: $street\r\n        street2: $street2\r\n        city: $city\r\n        postal_code: $postal_code\r\n    ) {\r\n        id\r\n    }\r\n}`\r\n\r\nconst STRIPE_CHARGE = gql`\r\nmutation stripeCharge($amount: Float!) {\r\n    stripeCharge(\r\n        amount: $amount\r\n    ) {\r\n        clientSecret\r\n    }\r\n}`\r\n\r\n\r\n\r\nconst DeliverSecond = () => {\r\n    const dispatch = useDispatch()\r\n    const [ createDeliver, result_deliver ] = useMutation(CREATE_DELIVER)\r\n    const [ stripeCharge, result_stripe ] = useMutation(STRIPE_CHARGE)\r\n    const orders = useSelector(state => state.orders)\r\n    const history = useHistory()\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const [ paymentMethodReq, setPaymentMethodReq ] = useState(null)\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const orderlist = orders.map(orderItem => {\r\n            return {\r\n                item: orderItem.item,\r\n                quantity: orderItem.quantity,\r\n                price: parseFloat(orderItem.price)\r\n            }\r\n        })\r\n        const price = orders.reduce((total, order) => {\r\n            return total + parseFloat(order.price)\r\n          }, 0)\r\n        const ordered = true\r\n        const email = event.target.email.value\r\n        const phone = event.target.phone.value\r\n        const street = event.target.street.value\r\n        const street2 = event.target.street2.value\r\n        const city = event.target.city.value\r\n        const postal_code = event.target.postal_code.value\r\n        const amount = parseFloat(price) * 100\r\n        \r\n        const billingDetails = {\r\n            name: \"Daisy\",\r\n            email: email,\r\n            phone: phone,\r\n            address: {\r\n                city: city,\r\n                line1: street,\r\n                line2: street2,\r\n                state: \"ON\",\r\n                postal_code: postal_code\r\n            }\r\n        }\r\n\r\n        try {\r\n            await createDeliver({  variables: { orderlist, price, ordered, email, phone, street, street2, city, postal_code } })\r\n            await stripeCharge({ variables: { amount } })\r\n            // console.log(\"done\")\r\n\r\n            var request = await stripe.createPaymentMethod({\r\n                type: 'card',\r\n                card: elements.getElement(CardElement),\r\n                billing_details: billingDetails\r\n            })\r\n    \r\n            setPaymentMethodReq(request)\r\n        } catch (error) {\r\n            // console.log(error)\r\n        }\r\n\r\n        event.target.email.value = ''\r\n        event.target.phone.value = ''\r\n        event.target.street.value = ''\r\n        event.target.street2.value = ''\r\n        event.target.city.value = ''\r\n        event.target.postal_code.value = ''\r\n\r\n        setTimeout(() => history.push('/delivering'), 5000)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (result_deliver.data) {\r\n            dispatch({\r\n                type: 'DELIVER_ID',\r\n                data: {\r\n                    id: result_deliver.data.createDeliver.id\r\n                }\r\n            })\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            if (paymentMethodReq) {\r\n                await stripe.confirmCardPayment(result_stripe.data.stripeCharge.clientSecret, {\r\n                    payment_method: paymentMethodReq.paymentMethod.id\r\n                })\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [result_deliver.data, result_stripe.data, paymentMethodReq])\r\n\r\n\r\n    const cardElementOptions = {\r\n        style: {\r\n            base: {\r\n                color: '#32325d',\r\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                fontSmoothing: 'antialiased',\r\n                fontSize: '16px',\r\n                '::placeholder': {\r\n                  color: '#aab7c4'\r\n                }\r\n              },\r\n              invalid: {\r\n                color: '#fa755a',\r\n                iconColor: '#fa755a'\r\n              }\r\n        },\r\n        hidePostalCode: true\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='reservation2-bigger'>\r\n            <form className='reservation2-grid' onSubmit={handleSubmit}>\r\n                <input type='text' name='email' placeholder='E-mail' />\r\n                <input type='text' name='phone' placeholder='Phone' />\r\n                <input type='text' name='street' placeholder='Street' />\r\n                <input type='text' name='street2' placeholder='Street2' />\r\n                <input type='text' name='city' placeholder='City' />\r\n                <input type='text' name='postal_code' placeholder='Postal Code' />\r\n\r\n                <CardElement options={cardElementOptions} />\r\n\r\n                <input type='submit' value='Deliver Now' />\r\n            </form>\r\n\r\n             {/* Users */}\r\n            <small className='mt-3'>want to <Link to=\"/login\">login</Link> ?</small>\r\n            <small>Register as a <Link to=\"/register\">user</Link>?</small>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DeliverSecond","import React, { useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport Notification from './notification'\r\n\r\n\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      value\r\n      username\r\n      id\r\n      role\r\n      email\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n  const [ login, result ] = useMutation(LOGIN)\r\n\r\n  useEffect(() => {\r\n    if ( result.data ) {\r\n      const token = result.data.login.value\r\n      const username = result.data.login.username\r\n      const userID = result.data.login.id\r\n      const role = result.data.login.role\r\n      const email = result.data.login.email\r\n\r\n      props.setToken(token)\r\n      props.setUsername(username)\r\n      props.setUserID(userID)\r\n      props.setRole(role)\r\n      props.setEmail(email)\r\n      props.setReserve(false)\r\n\r\n      localStorage.setItem('token', token)\r\n      localStorage.setItem('username', username)\r\n      localStorage.setItem('userID', userID)\r\n      localStorage.setItem('role', role)\r\n      localStorage.setItem('email', email)\r\n    }\r\n  }, [props, result.data])\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const username = event.target.username.value \r\n    const password = event.target.pwd.value\r\n\r\n    try {\r\n      await login({ variables: { username, password } })\r\n      props.setSuccess(\"Logged in!\")\r\n    } catch (error) {\r\n      props.setError(error.message)\r\n    }\r\n    \r\n\r\n    event.target.username.value = ''\r\n    event.target.pwd.value = ''\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='login-bigger'>\r\n        <h4>Log In Here</h4>\r\n        <br /><br />\r\n        <form className='login-form' onSubmit={handleSubmit}>\r\n          <Notification errorMessage={props.errorMessage} successMessage={props.successMessage} />\r\n          <input type='text' name='username' placeholder='Username' />\r\n          <input type='password' name='pwd' placeholder='Password' />\r\n          <input type=\"submit\" value='Log In' />\r\n\r\n          <small>Don't have an account yet? Register as a <Link to=\"/register\">user</Link>.</small>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Login","import React, {useEffect} from 'react'\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport Notification from './notification'\r\n\r\n\r\n\r\nconst CREATE_USER = gql`\r\nmutation createUser($username: String!, $name: String, $passwordHash: String!, $role: String!, $email: String!, $phone: String!, $street: String!, $street2: String, $city: String!, $postal_code: String!) {\r\n  createUser(\r\n    username: $username,\r\n    name: $name,\r\n    passwordHash: $passwordHash,\r\n    role: $role,\r\n    email: $email,\r\n    phone: $phone,\r\n    street: $street,\r\n    street2: $street2,\r\n    city: $city,\r\n    postal_code: $postal_code\r\n  ) {\r\n    username\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst Register = (props) => {\r\n  const [ createUser, user ] = useMutation(CREATE_USER)\r\n  \r\n\r\n  //Form Validation\r\n  const patterns = {\r\n    username: /^[\\w]{1,30}$/, \r\n    pwd: /^[\\w-]{1,30}$/,  \r\n    email: /^([a-zA-Z\\d\\.-]+)@([a-zA-Z\\d-]+)\\.([a-z{2,8}])(\\.[a-z]{2,8})?$/, \r\n    phone: /^\\d{11}$/, \r\n    street: /^[a-zA-Z\\d\\s]{1,50}$/, \r\n    city: /^[a-zA-Z]{1,30}$/, \r\n    postal_code: /^[a-zA-Z\\d]{6,10}$/\r\n  }\r\n\r\n  const ERRORS = {\r\n    username: \"Username must contain lettes, digits and _, within 1~30\", \r\n    pwd: \"Password must contain lettes, digits, _, and -, within 1~30\",  \r\n    email: \"Example: dai@gmail.com\", \r\n    phone: \"11 digits\", \r\n    street: \"within 50 letters\", \r\n    city: \"within 30 letters\", \r\n    postal_code: \"Example: L5G 20R or 230013\"\r\n  }\r\n\r\n  const regex_validate = (event) => {\r\n    if (patterns[event.target.attributes.name.value].test(event.target.value)) {\r\n    } else {\r\n      props.setError(ERRORS[event.target.attributes.name.value])\r\n    }\r\n  }\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    const username = event.target.username.value\r\n    const name = event.target.name.value\r\n    const passwordHash = event.target.pwd.value\r\n    const role = event.target.role.value\r\n    const email = event.target.email.value\r\n    const phone = event.target.phone.value\r\n    const street = event.target.street.value\r\n    const street2 = event.target.street2.value\r\n    const city = event.target.city.value\r\n    const postal_code = event.target.postal_code.value\r\n\r\n    try {\r\n      await createUser({  variables: { username, name, passwordHash, role, email, phone, street, street2, city, postal_code } })\r\n      props.setSuccess(\"Register Successfully, please log in !\")\r\n    } catch (error) {\r\n      props.setError(error.message)\r\n    } \r\n\r\n    event.target.username.value = ''\r\n    event.target.name.value = ''\r\n    event.target.pwd.value = ''\r\n    event.target.role.value = ''\r\n    event.target.email.value = ''\r\n    event.target.phone.value = ''\r\n    event.target.street.value = ''\r\n    event.target.street2.value = ''\r\n    event.target.city.value = ''\r\n    event.target.postal_code.value = ''\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if ( user.data ) {\r\n      props.setRegister(true)\r\n    }\r\n  }, [props, user.data])\r\n\r\n  return (\r\n    <div className=\"register-bigger\">\r\n      <h4>Register Here</h4>\r\n      <br /><br />\r\n      <form className='register-form' onSubmit={handleSubmit}>\r\n        <Notification errorMessage={props.errorMessage} successMessage={props.successMessage} />\r\n        <input onKeyUp={regex_validate} type='text' name='username' placeholder='Username' required />\r\n        <input type='text' name='name' placeholder='Name' />\r\n\r\n        <div className='role-radio'>\r\n          <div className='role'>\r\n            <input type=\"radio\" name=\"role\" value=\"manager\" required />\r\n            <label>Manager</label>\r\n          </div>\r\n\r\n          <div className='role'>\r\n            <input type=\"radio\" name=\"role\" value=\"courtier\" required />\r\n            <label>Courier</label>\r\n          </div>\r\n\r\n          <div className='role'>\r\n            <input type=\"radio\" name=\"role\" value=\"user\" required /> \r\n            <label>User</label>\r\n          </div>\r\n        </div>\r\n\r\n        <input onKeyUp={regex_validate} type='text' name='email' placeholder='E-mail' required />\r\n        <input onKeyUp={regex_validate} type='text' name='phone' placeholder='Phone' required/>\r\n        <input onKeyUp={regex_validate} type='text' name='street' placeholder='Street' required/>\r\n        <input type='text' name='street2' placeholder='Your partment No.' />\r\n        <input onKeyUp={regex_validate} type='text' name='city' placeholder='City' required/>\r\n        <input onKeyUp={regex_validate} type='text' name='postal_code' placeholder='Postal Code' required/>\r\n        <input onKeyUp={regex_validate} type='password' name='pwd' placeholder='Password' required/>\r\n        \r\n        <input type=\"submit\" value='Register' />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Register","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { gql, useMutation } from '@apollo/client'\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\r\n\r\n\r\n\r\nconst CREATE_DELIVER = gql`\r\nmutation createDeliver($orderlist: [OrderEntry]!, $price: Float!, $ordered: Boolean!, $user: ID, $email: String, $phone: String, $street: String, $street2: String, $city: String, $postal_code: String) {\r\n    createDeliver(\r\n        orderlist: $orderlist\r\n        price: $price\r\n        ordered: $ordered\r\n        user: $user\r\n        email: $email\r\n        phone: $phone\r\n        street: $street\r\n        street2: $street2\r\n        city: $city\r\n        postal_code: $postal_code\r\n    ) {\r\n        id\r\n    }\r\n}`\r\n\r\nconst STRIPE_CHARGE = gql`\r\nmutation stripeCharge($amount: Float!) {\r\n    stripeCharge(\r\n        amount: $amount\r\n    ) {\r\n        clientSecret\r\n    }\r\n}`\r\n\r\n\r\n\r\nconst Checkout = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [ createDeliver, result_deliver ] = useMutation(CREATE_DELIVER)\r\n    const [ stripeCharge, result_stripe ] = useMutation(STRIPE_CHARGE)\r\n    const [ paymentMethodReq, setPaymentMethodReq ] = useState(null)\r\n    const history = useHistory()\r\n    const orders = useSelector(state => state.orders)\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        const orderlist = orders.map(orderItem => {\r\n            return {\r\n                item: orderItem.item,\r\n                quantity: orderItem.quantity,\r\n                price: parseFloat(orderItem.price)\r\n            }\r\n        })\r\n        const price = orders.reduce((total, order) => {\r\n            return total + parseFloat(order.price)\r\n          }, 0)\r\n        const ordered = true\r\n        const user = props.userID\r\n        const amount = parseFloat(price) * 100\r\n\r\n        try {\r\n            await createDeliver({  variables: { orderlist, price, ordered, user } })\r\n            await stripeCharge({ variables: { amount } })\r\n\r\n            var request = await stripe.createPaymentMethod({\r\n                type: 'card',\r\n                card: elements.getElement(CardElement),\r\n            })\r\n    \r\n            setPaymentMethodReq(request)\r\n        } catch (error) {\r\n            // console.log(error)\r\n        }\r\n        \r\n        setTimeout(() => history.push('/delivering'), 5000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (result_deliver.data) {\r\n            dispatch({\r\n                type: 'DELIVER_ID',\r\n                data: {\r\n                    id: result_deliver.data.createDeliver.id\r\n                }\r\n            })\r\n        }\r\n\r\n        const fetchData = async () => {\r\n            if (paymentMethodReq) {\r\n                await stripe.confirmCardPayment(result_stripe.data.stripeCharge.clientSecret, {\r\n                    payment_method: paymentMethodReq.paymentMethod.id\r\n                })\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [result_deliver.data, result_stripe.data, paymentMethodReq])\r\n\r\n    const cardElementOptions = {\r\n        style: {\r\n            base: {\r\n                color: '#32325d',\r\n                fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                fontSmoothing: 'antialiased',\r\n                fontSize: '16px',\r\n                '::placeholder': {\r\n                  color: '#aab7c4'\r\n                }\r\n              },\r\n              invalid: {\r\n                color: '#fa755a',\r\n                iconColor: '#fa755a'\r\n              }\r\n        },\r\n        hidePostalCode: true\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='form-checkout-bigger'>\r\n            <h2>Checkout Form</h2>\r\n            <br /><br />\r\n            <form onSubmit={handleSubmit} className=\"form-checkout\">\r\n                <CardElement options={cardElementOptions} />\r\n                <button type='submit'>Deliver Now</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Checkout","import React, { useEffect, useState } from 'react'\r\nimport { gql, useSubscription } from '@apollo/client'\r\nimport { useSelector } from 'react-redux'\r\nimport Notification from './notification'\r\n\r\n\r\n\r\nconst ACCEPTED = gql`  \r\n  subscription {\r\n    accepted {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst DELIVERED = gql`  \r\n  subscription {\r\n    delivered {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst Delivering = (props) => {\r\n    const deliverid = useSelector(state => state.deliverid)\r\n    const orders = useSelector(state => state.orders)\r\n    const price = orders.reduce((total, order) => {\r\n      return total + parseFloat(order.price)\r\n    }, 0)\r\n\r\n    const [ deliverID, setDeliverID ] = useState(deliverid ? deliverid.id : null)\r\n    const [ accepted, setAccepted ] = useState(false)\r\n    const [ delivered, setDelivered ] = useState(false)\r\n\r\n\r\n    useSubscription(ACCEPTED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            setDeliverID(subscriptionData.data.accepted.id)\r\n            setAccepted(true)\r\n        }\r\n    })\r\n    \r\n    useSubscription(DELIVERED, {\r\n        onSubscriptionData: ({ subscriptionData }) => {\r\n            setDeliverID(subscriptionData.data.delivered.id)\r\n            setDelivered(true)\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n      if (!accepted && !delivered) {\r\n        props.setSuccess(`Your order # ${deliverID} has been ordered successfully. Please wait for courtier to pick up!`)\r\n      } \r\n      if (accepted && !delivered) {\r\n        props.setSuccess(`Your order # ${deliverID} has been picked up. Your courtier is on the way...`)\r\n      }\r\n    }, [])\r\n    \r\n  \r\n    return (\r\n        <div>\r\n          <Notification \r\n            errorMessage={props.errorMessage}\r\n            successMessage={props.successMessage}\r\n          />\r\n\r\n          <div className=\"order-list\">\r\n            <h2>Order List</h2>\r\n            <table className=\"table table-delivering\">\r\n              <tbody>\r\n                {\r\n                  orders.map((order, index) => \r\n                  <tr key={index}>\r\n                    <td>{order.name}</td>\r\n                    <td>{order.quantity}</td>\r\n                    <td>$ {order.price}</td>\r\n                  </tr>)\r\n                }          \r\n              </tbody>\r\n            </table>\r\n            <h5>Total Price: ${price.toFixed(2)}</h5>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Delivering","import React, { useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { gql, useQuery, useSubscription } from '@apollo/client'\r\n\r\n\r\n\r\nconst ALL_DELIVERS = gql`\r\nquery {\r\n    allDelivers {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n}\r\n`\r\nconst ORDERED = gql`\r\n  subscription {\r\n    ordered {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n  }\r\n`\r\nconst ACCEPTED = gql`  \r\n  subscription {\r\n    accepted {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n  }\r\n`\r\nconst DELIVERED = gql`  \r\n  subscription {\r\n    delivered {\r\n      purchase_date\r\n      price\r\n      ordered\r\n      accepted\r\n      delivered\r\n      id\r\n      user {\r\n        username\r\n      }\r\n      courtier {\r\n        username\r\n      }\r\n      info {\r\n        email\r\n        phone\r\n        street\r\n        street2\r\n        city\r\n        postal_code\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nconst DeliverManager = () => {\r\n  const [ orders, setOrders ] = useState([])\r\n\r\n  const style_false = {\r\n    color: 'red'\r\n  }\r\n\r\n  const style_true = {\r\n    color: 'green'\r\n  }\r\n\r\n  const delivers = useQuery(ALL_DELIVERS)\r\n\r\n  useSubscription(ORDERED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setOrders(orders.concat(subscriptionData.data.ordered))\r\n    }\r\n  })\r\n\r\n  useSubscription(ACCEPTED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setOrders(orders.map(order => order.id === subscriptionData.data.accepted.id ? subscriptionData.data.accepted : order))\r\n    }\r\n  })\r\n\r\n  useSubscription(DELIVERED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      setOrders(orders.map(order => order.id === subscriptionData.data.delivered.id ? subscriptionData.data.delivered : order))\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (delivers.data) {\r\n      setOrders(delivers.data.allDelivers)\r\n    }\r\n  }, [delivers.data])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Link to='/manager'>Main Page</Link>\r\n      {/* Display delivers */}\r\n      <div>\r\n        {delivers.loading\r\n          ? <div>loading...</div>\r\n          : <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Purchase Date</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">User</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Street</th>\r\n                <th scope=\"col\">Apt#</th>\r\n                <th scope=\"col\">City</th>\r\n                <th scope=\"col\">Postal Code</th>\r\n                <th scope=\"col\">Accepted</th>\r\n                <th scope=\"col\">Delivered</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.filter(deliver => deliver.ordered === true).map(deliver => \r\n                <tr key={deliver.id}>\r\n                    <th scope=\"row\">{deliver.id}</th>\r\n                    <td>{new Date(parseInt(deliver.purchase_date)).toLocaleString()}</td>\r\n                    <td>{deliver.price}</td>\r\n                    <td>{deliver.user ? deliver.user.username : \"None\"}</td>\r\n                    <td>{deliver.info ? deliver.info.phone : \"None\"}</td>\r\n                    <td>{deliver.info ? deliver.info.street : \"None\"}</td>\r\n                    <td>{deliver.info ? deliver.info.street2 : \"None\"}</td>\r\n                    <td>{deliver.info ? deliver.info.city : \"None\"}</td>\r\n                    <td>{deliver.info ? deliver.info.postal_code : \"None\"}</td>\r\n                    <td>\r\n                      <button style={deliver.accepted ? style_true : style_false} className='btn btn-white'>\r\n                        <i className=\"fas fa-check\"></i>\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <button style={deliver.delivered ? style_true : style_false} className='btn btn-white'>\r\n                        <i className=\"fas fa-check\"></i>\r\n                      </button>\r\n                    </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default DeliverManager","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { gql, useQuery, useMutation } from '@apollo/client'\r\n\r\n\r\n\r\nconst ALL_RESERVATIONS = gql`\r\nquery {\r\n  allReservations {\r\n    reservedAt\r\n    time\r\n    customers\r\n    email\r\n    phone\r\n    check\r\n    id\r\n    user {\r\n      username\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst UPDATE_RESERVATION_CHECK = gql`\r\nmutation updateReservationCheck($id: ID!, $check: Boolean!) {\r\n  updateReservationCheck(\r\n    id: $id\r\n    check: $check\r\n  ) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst ReservationManager = () => {\r\n  const reservation = useQuery(ALL_RESERVATIONS)\r\n  const [ updateReservationCheck ] = useMutation(UPDATE_RESERVATION_CHECK)\r\n\r\n  const style_false = {\r\n    color: 'red'\r\n  }\r\n\r\n  const style_true = {\r\n    color: 'green'\r\n  }\r\n\r\n  const changeCheck = (event) => {\r\n    const id = event.target.id.value\r\n    const check = true\r\n    updateReservationCheck({  variables: { id, check } })\r\n  }\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault()\r\n\r\n  //   const min_date = event.target.min_date.value\r\n  //   const max_date = event.target.max_date.value\r\n\r\n  //   localStorage.setItem('min_date', min_date)\r\n  //   localStorage.setItem('max_date', max_date)\r\n\r\n  //   event.target.min_date.value=''\r\n  //   event.target.max_date.value=''\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <h6 className='text-center my-5'>\r\n        <Link to='/manager'>Main Page</Link>\r\n      </h6>\r\n\r\n      {/* Change Min Date */}\r\n      {/* <div className='reservation-manager-bigger'>\r\n        <form onSubmit={handleSubmit} className='reservation-manager-form'>\r\n          <div>\r\n            <h6 className='mb-3'>Change Min Date: </h6>\r\n            <input type='text' placeholder='Format: 2020-11-20' name='min_date' />\r\n          </div>\r\n\r\n          <div>\r\n            <h6 className='mb-3'>Change Max Date: </h6>\r\n            <input type='text' placeholder='Format: 2020-11-20' name='max_date' />\r\n          </div>\r\n        \r\n          <button type='submit'>Save Changes</button>\r\n        </form>\r\n      </div> */}\r\n\r\n      {/* Display Reservation */}\r\n      <div className='reservation-manager-display'>\r\n      {reservation.loading\r\n        ? <div>loading...</div>\r\n        : <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Reservation Date</th>\r\n                <th scope=\"col\">Reservation Time</th>\r\n                <th scope=\"col\">Number of Customers</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Username</th>\r\n                <th scope=\"col\">Accepted</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {reservation.data.allReservations.map(res => \r\n                <tr key={res.id}>\r\n                  <th scope=\"row\">{res.reservedAt}</th>\r\n                  <td>{res.time}</td>\r\n                  <td>{res.customers}</td>\r\n                  <td>{res.email ? res.email : 'None'}</td>\r\n                  <td>{res.phone ? res.phone : 'None'}</td>\r\n                  <td>{res.user ? res.user.username : \"None\"}</td>\r\n                  <td>\r\n                    <form onSubmit={changeCheck}>\r\n                      <input type='hidden' value={res.id} name='id' />\r\n                      <button className='btn btn-white' type='submit'>\r\n                        <i style={res.check ? style_true : style_false} className=\"fas fa-check\"></i>\r\n                      </button>\r\n                    </form>\r\n                  </td>\r\n                </tr> \r\n              )}\r\n            </tbody>\r\n          </table>\r\n      }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ReservationManager","import React, { useState, useEffect } from 'react'\r\nimport { gql, useQuery, useMutation } from '@apollo/client'\r\nimport { Modal, Button } from 'react-bootstrap'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst ALL_FOOD = gql`\r\nquery {\r\n  allFood  {\r\n    name\r\n    description\r\n    category\r\n    price\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst ADD_FOOD = gql`\r\nmutation addFood($name: String!, $description: String!, $category: String!, $price: Float!) {\r\n  addFood(\r\n    name: $name\r\n    description: $description\r\n    category: $category\r\n    price: $price\r\n  ) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst UPDATE_FOOD_PRICE = gql`\r\nmutation updateFoodPrice($id: ID!, $price: Float!) {\r\n  updateFoodPrice(\r\n    id: $id\r\n    price: $price\r\n  ) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst DELETE_FOOD = gql`\r\nmutation deleteFood($id: ID!) {\r\n  deleteFood(\r\n    id: $id\r\n  ) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\nconst Example = ({ show, handleClose, updateFoodPrice, id }) => {\r\n  const handleSubmit = (event) => {\r\n    const price = parseFloat(event.target.price.value)\r\n    updateFoodPrice({ variables: {id, price} })\r\n    event.target.price.value = ''\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <form onSubmit={handleSubmit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Price</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <input text='type' name='price' placeholder='Change Price' />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type='button' variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button type='submit' variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst MenuManager = () => {\r\n  const [show, setShow] = useState({})\r\n  const [ menu, setMenu ] = useState([])\r\n\r\n  const result = useQuery(ALL_FOOD)\r\n  const [ addFood ] = useMutation(ADD_FOOD)\r\n  const [ updateFoodPrice ] = useMutation(UPDATE_FOOD_PRICE)\r\n  const [ deleteFood ] = useMutation(DELETE_FOOD)\r\n\r\n  useEffect(()=> {\r\n    if (result.data) {\r\n      setMenu(result.data.allFood)\r\n    }\r\n  }, [result.data])\r\n  \r\n  useEffect(() => {\r\n    setShow(menu.reduce((result, food) => {\r\n      result[food.id] = false\r\n      return result\r\n    }, {}))\r\n  }, [menu])\r\n\r\n  const handleClose = (food_id) => {\r\n    return () => {\r\n        var s = {\r\n            ...show,\r\n        }\r\n        s[food_id] = false\r\n        setShow(s)\r\n    }\r\n  }\r\n\r\n  const handleShow = (food_id) => {\r\n    return () => {\r\n        var s = {\r\n            ...show,\r\n        }\r\n        s[food_id] = true\r\n        setShow(s)\r\n    }\r\n  }\r\n\r\n  const handleAddFood = (event) => {\r\n    const name = event.target.name.value\r\n    const description = event.target.description.value\r\n    const category = event.target.category.value\r\n    const price = parseFloat(event.target.price.value)\r\n\r\n    addFood({ variables: { name, description, category, price } })\r\n\r\n    event.target.name.value = ''\r\n    event.target.description.value = ''\r\n    event.target.category.value = ''\r\n    event.target.price.value = ''\r\n  }\r\n\r\n  const handleDeleteFood = (event) => {\r\n    const id = event.target.id.value\r\n    deleteFood({ variables: { id } })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {result.loading\r\n        ? <div>Loading...</div>\r\n        : <div>\r\n            <h2 className='text-center my-5'>Menu</h2>\r\n            <h6 className='text-center my-5'>\r\n              <Link to=\"/manager\"> Main Page </Link>\r\n            </h6>\r\n            \r\n            <table className=\"table table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Category</th>\r\n                  <th scope=\"col\">Price</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {menu.map(food => \r\n                  <tr key={food.id}>\r\n                    <th scope=\"row\">{food.name}</th>\r\n                    <td>{food.description}</td>\r\n                    <td>{food.category}</td>\r\n                    <td>\r\n                      <p>${food.price}</p>\r\n                      <button className='btn btn-dark' onClick={handleShow(food.id)}>\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </button>\r\n                      <Example \r\n                        show={show[food.id]} \r\n                        handleClose={handleClose(food.id)} \r\n                        updateFoodPrice={updateFoodPrice}\r\n                        id={food.id}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <form onSubmit={handleDeleteFood}>\r\n                        <input type='hidden' name='id' value={food.id} />\r\n                        <button type='submit' className='btn btn-dark'>\r\n                          <i className=\"fas fa-trash-alt\"></i>\r\n                        </button>\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n      }\r\n\r\n\r\n      <div className='menu-manager-bigger'>\r\n        <form onSubmit={handleAddFood} className='menu-manager'>\r\n          <input type='text' name='name' placeholder='Food Name' />\r\n          <textarea type='text' name='description' placeholder='Food Description'></textarea>\r\n\r\n          <div className='menu-manager-radio'>\r\n            <div className='menu-radio'>\r\n              <input type='radio' name='category' value='coffee' />\r\n              <label>Coffee</label>\r\n            </div>\r\n\r\n            <div className='menu-radio'>\r\n              <input type='radio' name='category' value='food' />\r\n              <label>Food</label>\r\n            </div>\r\n\r\n            <div className='menu-radio'>\r\n              <input type='radio' name='category' value='dessert' />\r\n              <label>Dessert</label>\r\n            </div>\r\n          </div>\r\n\r\n          <input type='text' name='price' placeholder='Food Price' />\r\n\r\n          <button className='btn btn-primary' type='submit'>CREATE NEW FOOD</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default MenuManager","const bookReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'BOOK_TIME':\r\n            return action.data\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default bookReducer","const orderReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ORDER_FOOD':\r\n            return state.concat(action.data)\r\n        case 'DELETE_FOOD':\r\n            const itemsNotDelete= state.filter(food => food.item !== action.data.item)\r\n            return itemsNotDelete\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default orderReducer","const deliveridReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'DELIVER_ID':\r\n            return action.data\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default deliveridReducer","// Dependencies\nimport React, {useState} from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Redirect\n} from \"react-router-dom\"\nimport { ApolloClient, ApolloProvider, HttpLink, InMemoryCache, split } from '@apollo/client'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/client/link/ws'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { setContext } from 'apollo-link-context'\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\n\n// Static\nimport './decorator/styles.css'\n\n// React.js\nimport Footer from './components/footer'\nimport Home from './components/home'\nimport Manager from './components/manager'\nimport Courtier from './components/courtier'\nimport Reservation from './components/reservation'\nimport ReservationSecond from './components/reservation2'\nimport Deliver from './components/deliver'\nimport DeliverSecond from './components/deliver2'\nimport Login from './components/login'\nimport Register from './components/register'\nimport Checkout from './components/checkout'\nimport Delivering from './components/delivering'\nimport DeliverManager from './components/delivermanager'\nimport ReservationManager from './components/reservationmanager'\nimport MenuManager from './components/menumanager'\nimport bookReducer from './reducer/book'\nimport orderReducer from './reducer/order'\nimport deliveridReducer from './reducer/deliverid'\n\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token')\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ \n  uri: 'https://restaurant.daisywebdev.com/graphql' \n})\n\nconst wsLink = new WebSocketLink({\n  uri: `wss://restaurant.daisywebdev.com/graphql-ws`,\n  options: {\n    reconnect: true\n  }\n})\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n    )\n  }, wsLink, authLink.concat(httpLink))\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink\n})\n\n\n\nconst reducer = combineReducers({\n  books: bookReducer,\n  orders: orderReducer,\n  deliverid: deliveridReducer\n})\n\nconst store = createStore(reducer)\n\n\n\nconst stripePromise = loadStripe(\"pk_test_jfeD0SXgvoZ0qfB3nizgQGW500xwK6q5lo\")\n\n\n\nconst App = () => {\n  const [ reserve, setReserve ] = useState(false)\n  const [ register, setRegister ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ successMessage, setSuccessMessage ] = useState(null)\n  const [ username, setUsername ] = useState(localStorage.getItem('username'))\n  const [ token, setToken ] = useState(localStorage.getItem('token'))\n  const [ userID, setUserID ] = useState(localStorage.getItem('userID'))\n  const [ role, setRole ] = useState(localStorage.getItem('role'))\n  const [ email, setEmail ] = useState(localStorage.getItem('email'))\n\n  \n  //Notification\n  const error_notify = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 10000)\n  }\n\n  const success_notify = (message) => {\n    setSuccessMessage(message)\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, 10000)\n  }\n\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n            <Route exact path='/manager/menu'>\n              <MenuManager />\n            </Route>\n\n            <Route exact path='/manager/reservation'>\n              <ReservationManager />\n            </Route>\n\n            <Route exact path='/manager/deliver'>\n              <DeliverManager />\n            </Route>\n\n            <Route exact path=\"/manager\">\n              {token\n                ? <Manager \n                    setToken={setToken} \n                    setRole={setRole} \n                    setUserID={setUserID}\n                    setUsername={setUsername}\n                  />\n                : <Redirect to='/' />\n              }\n            </Route>\n           \n            <Route exact path=\"/courtier\">\n              {token\n                ? <Courtier \n                    setToken={setToken} \n                    setRole={setRole} \n                    setUserID={setUserID}\n                    setUsername={setUsername}\n                  />\n                : <Redirect to='/' />\n              }\n            </Route>\n\n            <Route exact path=\"/register\">\n                {register\n                    ? <Redirect to=\"/login\" />\n                    : <Register \n                        setRegister={setRegister} \n                        setError={error_notify}\n                        setSuccess={success_notify}\n                        errorMessage={errorMessage}\n                        successMessage={successMessage}\n                      />\n                }\n            </Route>\n\n            <Route exact path=\"/logout\">\n                <Redirect to=\"/\" />\n            </Route>\n\n            <Route exact path=\"/login\">\n                {token\n                  ? <Redirect to=\"/\" />\n                  : <Login \n                      setToken={setToken} \n                      setUsername={setUsername} \n                      setUserID={setUserID} \n                      setRole={setRole} \n                      setEmail={setEmail}\n                      setReserve={setReserve}\n                      setError={error_notify}\n                      setSuccess={success_notify}\n                      errorMessage={errorMessage}\n                      successMessage={successMessage}\n                    />\n                }\n            </Route>\n\n            <Route exact path=\"/reservation/signup\">\n                <ReservationSecond \n                  setReserve={setReserve} \n                  setError={error_notify}\n                  setSuccess={success_notify}\n                  errorMessage={errorMessage}\n                  successMessage={successMessage}\n                />\n            </Route>\n\n            <Route exact path=\"/reservation\">\n                {reserve\n                  ? <Redirect to=\"/reservation/signup\" />\n                  : <Reservation \n                      setReserve={setReserve} \n                      userID={userID} \n                      email={email}\n                      setError={error_notify}\n                      setSuccess={success_notify}\n                      errorMessage={errorMessage}\n                      successMessage={successMessage}\n                    />\n                }\n            </Route>\n\n            <Route exact path=\"/delivering\">\n              <Delivering \n                setError={error_notify}\n                setSuccess={success_notify}\n                errorMessage={errorMessage}\n                successMessage={successMessage}\n              /> \n            </Route>\n\n            <Route exact path=\"/checkout\">\n              <Checkout userID={userID} /> \n            </Route>\n\n            <Route exact path=\"/deliver/signup\">\n              <DeliverSecond />\n            </Route>\n\n            <Route exact path=\"/deliver\">\n              <Deliver userID={userID} />\n            </Route>\n\n            <Route exact path=\"/\">\n              {role === 'manager' && <Redirect to='/manager' />}\n              {role === 'courtier' && <Redirect to='/courtier' />}\n              <Home \n                token={token} \n                userID={userID} \n                username={username} \n                setToken={setToken} \n                setUsername={setUsername} \n                setUserID={setUserID} \n                setRole={setRole} \n              />\n            </Route>\n        </Switch>\n      </Router>\n\n      <Footer />\n    </div>\n  )\n}\n\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <Elements stripe={stripePromise}>\n        <App />\n      </Elements>\n    </Provider>\n  </ApolloProvider>, document.getElementById('root')\n)"],"sourceRoot":""}